{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krith\\\\OneDrive\\\\Desktop\\\\quiz-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"What is the capital of Brazil?\",\n  options: [\"Rio de Janeiro\", \"São Paulo\", \"Brasília\", \"Salvador\"],\n  answer: \"Brasília\"\n}, {\n  question: \"Who wrote 'Romeo and Juliet'?\",\n  options: [\"Charles Dickens\", \"William Shakespeare\", \"Jane Austen\", \"Mark Twain\"],\n  answer: \"William Shakespeare\"\n}, {\n  question: \"What is the largest planet in our Solar System?\",\n  options: [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"],\n  answer: \"Jupiter\"\n}, {\n  question: \"Which gas is most abundant in Earth's atmosphere?\",\n  options: [\"Oxygen\", \"Carbon Dioxide\", \"Nitrogen\", \"Helium\"],\n  answer: \"Nitrogen\"\n}, {\n  question: \"What year did World War II end?\",\n  options: [\"1942\", \"1945\", \"1947\", \"1939\"],\n  answer: \"1945\"\n}\n// ... add more questions as needed ...\n];\nconst totalQuestions = questions.length;\nfunction App() {\n  _s();\n  const [current, setCurrent] = useState(0);\n  const [score, setScore] = useState(0);\n  const [answered, setAnswered] = useState(Array(totalQuestions).fill(false));\n  const [selected, setSelected] = useState(Array(totalQuestions).fill(null));\n  const [timeLeft, setTimeLeft] = useState(30 * 60); // 30 minutes\n  const timerRef = useRef();\n  useEffect(() => {\n    timerRef.current = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timerRef.current);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timerRef.current);\n  }, []);\n  const handleAnswer = option => {\n    if (answered[current]) return;\n    const newAnswered = [...answered];\n    newAnswered[current] = true;\n    setAnswered(newAnswered);\n    const newSelected = [...selected];\n    newSelected[current] = option;\n    setSelected(newSelected);\n    if (option === questions[current].answer) {\n      setScore(prev => prev + 1);\n    }\n  };\n  const prevQuestion = () => {\n    if (current > 0) setCurrent(current - 1);\n  };\n  const nextQuestion = () => {\n    if (current < totalQuestions - 1) setCurrent(current + 1);\n  };\n  const formatTime = t => `${Math.floor(t / 60)}:${(t % 60).toString().padStart(2, '0')}`;\n  const q = questions[current];\n  const userAnswered = answered[current];\n  const userSelected = selected[current];\n  const isCorrect = userSelected === q.answer;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"quizContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"General Knowledge Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"timer\",\n      children: [\"Time Left: \", formatTime(timeLeft)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"question\",\n      className: \"question\",\n      children: [current + 1, \". \", q.question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"options\",\n      className: \"options\",\n      children: [q.options.map((option, idx) => {\n        let btnClass = '';\n        if (userAnswered) {\n          if (option === q.answer) btnClass = 'correct';else if (option === userSelected && option !== q.answer) btnClass = 'wrong';\n        }\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(option),\n          disabled: userAnswered,\n          className: btnClass,\n          children: option\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this);\n      }), userAnswered && userSelected !== q.answer && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"feedback\",\n        children: [\"The correct answer was: \", q.answer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn\",\n        onClick: prevQuestion,\n        disabled: current === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn\",\n        onClick: nextQuestion,\n        disabled: current === totalQuestions - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"score\",\n      className: \"score\",\n      children: [\"Score: \", score, \"/\", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        id: \"progress\",\n        style: {\n          width: `${(current + 1) / totalQuestions * 100}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7yKnaNag+K0Dzn9sc+nNqlewR2w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","questions","question","options","answer","totalQuestions","length","App","_s","current","setCurrent","score","setScore","answered","setAnswered","Array","fill","selected","setSelected","timeLeft","setTimeLeft","timerRef","setInterval","prev","clearInterval","handleAnswer","option","newAnswered","newSelected","prevQuestion","nextQuestion","formatTime","t","Math","floor","toString","padStart","q","userAnswered","userSelected","isCorrect","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","btnClass","onClick","disabled","style","width","_c","$RefreshReg$"],"sources":["C:/Users/krith/OneDrive/Desktop/quiz-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\n\r\nconst questions = [\r\n  { question: \"What is the capital of Brazil?\", options: [\"Rio de Janeiro\", \"São Paulo\", \"Brasília\", \"Salvador\"], answer: \"Brasília\" },\r\n  { question: \"Who wrote 'Romeo and Juliet'?\", options: [\"Charles Dickens\", \"William Shakespeare\", \"Jane Austen\", \"Mark Twain\"], answer: \"William Shakespeare\" },\r\n  { question: \"What is the largest planet in our Solar System?\", options: [\"Earth\", \"Mars\", \"Jupiter\", \"Saturn\"], answer: \"Jupiter\" },\r\n  { question: \"Which gas is most abundant in Earth's atmosphere?\", options: [\"Oxygen\", \"Carbon Dioxide\", \"Nitrogen\", \"Helium\"], answer: \"Nitrogen\" },\r\n  { question: \"What year did World War II end?\", options: [\"1942\", \"1945\", \"1947\", \"1939\"], answer: \"1945\" },\r\n  // ... add more questions as needed ...\r\n];\r\nconst totalQuestions = questions.length;\r\n\r\nfunction App() {\r\n  const [current, setCurrent] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [answered, setAnswered] = useState(Array(totalQuestions).fill(false));\r\n  const [selected, setSelected] = useState(Array(totalQuestions).fill(null));\r\n  const [timeLeft, setTimeLeft] = useState(30 * 60); // 30 minutes\r\n  const timerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(timerRef.current);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(timerRef.current);\r\n  }, []);\r\n\r\n  const handleAnswer = (option) => {\r\n    if (answered[current]) return;\r\n    const newAnswered = [...answered];\r\n    newAnswered[current] = true;\r\n    setAnswered(newAnswered);\r\n    const newSelected = [...selected];\r\n    newSelected[current] = option;\r\n    setSelected(newSelected);\r\n    if (option === questions[current].answer) {\r\n      setScore((prev) => prev + 1);\r\n    }\r\n  };\r\n\r\n  const prevQuestion = () => {\r\n    if (current > 0) setCurrent(current - 1);\r\n  };\r\n  const nextQuestion = () => {\r\n    if (current < totalQuestions - 1) setCurrent(current + 1);\r\n  };\r\n\r\n  const formatTime = (t) => `${Math.floor(t / 60)}:${(t % 60).toString().padStart(2, '0')}`;\r\n\r\n  const q = questions[current];\r\n  const userAnswered = answered[current];\r\n  const userSelected = selected[current];\r\n  const isCorrect = userSelected === q.answer;\r\n\r\n  return (\r\n    <div className=\"container\" id=\"quizContainer\">\r\n      <h1>General Knowledge Quiz</h1>\r\n      <div id=\"timer\">Time Left: {formatTime(timeLeft)}</div>\r\n      <div id=\"question\" className=\"question\">{current + 1}. {q.question}</div>\r\n      <div id=\"options\" className=\"options\">\r\n        {q.options.map((option, idx) => {\r\n          let btnClass = '';\r\n          if (userAnswered) {\r\n            if (option === q.answer) btnClass = 'correct';\r\n            else if (option === userSelected && option !== q.answer) btnClass = 'wrong';\r\n          }\r\n          return (\r\n            <button\r\n              key={idx}\r\n              onClick={() => handleAnswer(option)}\r\n              disabled={userAnswered}\r\n              className={btnClass}\r\n            >\r\n              {option}\r\n            </button>\r\n          );\r\n        })}\r\n        {userAnswered && userSelected !== q.answer && (\r\n          <p className=\"feedback\">The correct answer was: {q.answer}</p>\r\n        )}\r\n      </div>\r\n      <div className=\"navigation\">\r\n        <button className=\"nav-btn\" onClick={prevQuestion} disabled={current === 0}>Previous</button>\r\n        <button className=\"nav-btn\" onClick={nextQuestion} disabled={current === totalQuestions - 1}>Next</button>\r\n      </div>\r\n      <div id=\"score\" className=\"score\">Score: {score}/{totalQuestions}</div>\r\n      <div className=\"progress-bar\"><div className=\"progress\" id=\"progress\" style={{ width: `${((current + 1) / totalQuestions) * 100}%` }}></div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}